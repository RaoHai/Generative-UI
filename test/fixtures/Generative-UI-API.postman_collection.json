{
  "info": {
    "name": "Generative UI API",
    "description": "API collection for Generative UI Demo Server with LangGraph standard implementation",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "generative-ui-api",
    "version": {
      "major": 2,
      "minor": 0,
      "patch": 0
    }
  },
  "item": [
    {
      "name": "System Health",
      "item": [
        {
          "name": "General Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/greetings",
              "host": ["{{base_url}}"],
              "path": ["api", "greetings"]
            },
            "description": "Basic health check endpoint to verify the server is running"
          },
          "response": []
        },
        {
          "name": "Agents Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/agents/health",
              "host": ["{{base_url}}"],
              "path": ["api", "agents", "health"]
            },
            "description": "Check the health of all available agents and get the list of registered agents"
          },
          "response": [
            {
              "name": "Healthy Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/agents/health",
                  "host": ["{{base_url}}"],
                  "path": ["api", "agents", "health"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"healthy\",\n  \"agents\": [\"raw-web\"]\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Raw Web Agent",
      "item": [
        {
          "name": "Synchronous Chat - Stock Analysis",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"请分析苹果公司(AAPL)的股票并生成包含交互式图表的综合报告\"\n    }\n  ],\n  \"stream\": false,\n  \"config\": {\n    \"recursion_limit\": 25\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/agents/raw-web/chat",
              "host": ["{{base_url}}"],
              "path": ["api", "agents", "raw-web", "chat"]
            },
            "description": "Synchronous chat with raw-web agent for stock analysis. Returns complete response when finished."
          },
          "response": [
            {
              "name": "Successful Analysis",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"请分析苹果公司(AAPL)的股票\"\n    }\n  ],\n  \"stream\": false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/api/agents/raw-web/chat",
                  "host": ["{{base_url}}"],
                  "path": ["api", "agents", "raw-web", "chat"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"content\": \"<html>\\n<head>\\n  <title>AAPL Stock Analysis</title>\\n  <style>/* CSS styles */</style>\\n</head>\\n<body>\\n  <h1>Apple Inc. (AAPL) Stock Analysis Report</h1>\\n  <!-- Interactive D3.js charts and analysis -->\\n</body>\\n</html>\",\n  \"role\": \"assistant\",\n  \"finish_reason\": \"stop\"\n}"
            }
          ]
        },
        {
          "name": "Streaming Chat - Stock Analysis",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "text/event-stream"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"请分析特斯拉(TSLA)股票，生成包含蜡烛图的交互式报告\"\n    }\n  ],\n  \"stream\": true,\n  \"config\": {\n    \"recursion_limit\": 25\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/agents/raw-web/chat",
              "host": ["{{base_url}}"],
              "path": ["api", "agents", "raw-web", "chat"]
            },
            "description": "Streaming chat with raw-web agent. Returns Server-Sent Events with incremental responses."
          },
          "response": [
            {
              "name": "Streaming Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "text/event-stream"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"请分析特斯拉股票\"\n    }\n  ],\n  \"stream\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/api/agents/raw-web/chat",
                  "host": ["{{base_url}}"],
                  "path": ["api", "agents", "raw-web", "chat"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "content-type",
                  "value": "text/event-stream"
                },
                {
                  "key": "cache-control",
                  "value": "no-cache"
                },
                {
                  "key": "connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "data: {\"delta\": \"正在获取TSLA股票数据...\", \"finish_reason\": null}\n\ndata: {\"delta\": \"<html><head><title>TSLA分析报告</title>\", \"finish_reason\": null}\n\ndata: {\"delta\": null, \"finish_reason\": \"stop\"}\n\n"
            }
          ]
        },
        {
          "name": "Dedicated Stream Endpoint",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "text/event-stream"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"生成微软(MSFT)股票的技术分析报告，包含移动平均线和成交量分析\"\n    }\n  ],\n  \"config\": {\n    \"recursion_limit\": 30\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/agents/raw-web/stream",
              "host": ["{{base_url}}"],
              "path": ["api", "agents", "raw-web", "stream"]
            },
            "description": "Dedicated streaming endpoint for raw-web agent. Always returns streaming response."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Generic Agent Interface",
      "item": [
        {
          "name": "Generic Chat - Raw Web",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"请分析谷歌(GOOGL)股票的近期表现\"\n    }\n  ],\n  \"stream\": false\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/agents/raw-web/chat",
              "host": ["{{base_url}}"],
              "path": ["api", "agents", "raw-web", "chat"]
            },
            "description": "Using the generic agent interface to call raw-web agent"
          },
          "response": []
        },
        {
          "name": "Generic Chat - Invalid Agent",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"测试无效的代理\"\n    }\n  ],\n  \"stream\": false\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/agents/invalid-agent/chat",
              "host": ["{{base_url}}"],
              "path": ["api", "agents", "invalid-agent", "chat"]
            },
            "description": "Test error handling with invalid agent name"
          },
          "response": [
            {
              "name": "Agent Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"测试无效的代理\"\n    }\n  ],\n  \"stream\": false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/api/agents/invalid-agent/chat",
                  "host": ["{{base_url}}"],
                  "path": ["api", "agents", "invalid-agent", "chat"]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"detail\": \"Agent 'invalid-agent' not found\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Conversation Examples",
      "item": [
        {
          "name": "Multi-turn Conversation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"请分析苹果股票\"\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"我已经为您分析了苹果股票的数据，以下是详细报告...\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"能否重点分析一下最近一周的价格波动?\"\n    }\n  ],\n  \"stream\": false\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/agents/raw-web/chat",
              "host": ["{{base_url}}"],
              "path": ["api", "agents", "raw-web", "chat"]
            },
            "description": "Example of multi-turn conversation with context"
          },
          "response": []
        },
        {
          "name": "With System Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"你是一个专业的股票分析师，请提供详细的技术分析和投资建议。\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"分析亚马逊(AMZN)股票的投资价值\"\n    }\n  ],\n  \"stream\": false,\n  \"config\": {\n    \"recursion_limit\": 20\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/agents/raw-web/chat",
              "host": ["{{base_url}}"],
              "path": ["api", "agents", "raw-web", "chat"]
            },
            "description": "Example with system message to set context and behavior"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set default base URL if not already set",
          "if (!pm.environment.get('base_url')) {",
          "    pm.environment.set('base_url', 'http://localhost:8080');",
          "}",
          "",
          "// Add timestamp for unique requests",
          "pm.environment.set('timestamp', new Date().toISOString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Common tests for all requests",
          "pm.test('Response time is reasonable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(30000);",
          "});",
          "",
          "// Specific tests based on endpoint",
          "if (pm.request.url.path.includes('health')) {",
          "    pm.test('Health check returns OK', function () {",
          "        pm.response.to.have.status(200);",
          "    });",
          "    ",
          "    pm.test('Health response has correct structure', function () {",
          "        const responseJson = pm.response.json();",
          "        pm.expect(responseJson).to.have.property('status');",
          "    });",
          "}",
          "",
          "if (pm.request.url.path.includes('chat') && !pm.request.headers.get('Accept')?.includes('event-stream')) {",
          "    pm.test('Sync chat returns proper JSON', function () {",
          "        pm.response.to.have.status(200);",
          "        const responseJson = pm.response.json();",
          "        pm.expect(responseJson).to.have.property('content');",
          "        pm.expect(responseJson).to.have.property('role');",
          "        pm.expect(responseJson.role).to.eql('assistant');",
          "    });",
          "}",
          "",
          "if (pm.request.headers.get('Accept')?.includes('event-stream')) {",
          "    pm.test('Stream returns proper content type', function () {",
          "        pm.expect(pm.response.headers.get('Content-Type')).to.include('text/event-stream');",
          "    });",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080",
      "type": "string",
      "description": "Base URL for the Generative UI API server"
    },
    {
      "key": "timestamp",
      "value": "",
      "type": "string",
      "description": "Current timestamp for unique requests"
    }
  ]
}